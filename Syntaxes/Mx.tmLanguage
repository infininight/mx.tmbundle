<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>mx</string>
		<string>inp</string>
		<string>mxo</string>
	</array>
	<key>foldingStartMarker</key>
	<string>(?i)^[ \t]*(Title +)?(G(roup)? *[0-9]|Begin|matrices)</string>
	<key>foldingStopMarker</key>
	<string>(?i)^[ \t]*(END|!end)</string>
	<key>keyEquivalent</key>
	<string>^~M</string>
	<key>name</key>
	<string>Mx</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>comment</key>
			<string>everything after an “!” is comment</string>
			<key>match</key>
			<string>!.*$</string>
			<key>name</key>
			<string>comment.character.!.mx</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Begin Matrices;... End Matrices;</string>
			<key>match</key>
			<string>(?i)\b(Begin|End) +(Matrices|Algebra) ?;</string>
			<key>name</key>
			<string>keyword.control.semicolon.mx</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>line doesnt end with terminator</string>
			<key>match</key>
			<string>(?i)\b(Begin|End) +(Matrices|Algebra)[^;]?[!\n]</string>
			<key>name</key>
			<string>invalid.illegal.incomplete.mx</string>
		</dict>
		<dict>
			<key>match</key>
			<string>;</string>
			<key>name</key>
			<string>keyword.control.semicolon.mx</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.title.mx</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.operator.mx</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>string.VARIABLE_NAMES.mx</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Group2: blah blah;</string>
			<key>match</key>
			<string>(?i)^[ \t]*(G(roup)? *[0-9]+)(:)(.*)$</string>
			<key>name</key>
			<string>meta.keyword.title.mx</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)#(define|ng(roups)?)\b</string>
			<key>name</key>
			<string>keyword.control.mx</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i)(Boundary|Calculation|CMatrix|Constraint|Covariance|Covariances|CTable|Data|Define|Definition[a-zA-Z_]*|Drop|Else|End|Endif|Fix(ed)?|Equate|Free|Unique|If|Intervals?|Labels?|Matrices|Matrix|Mean|Means|Missing|NGroups?|Options?|Ordinal|Rectangular|Select( if)?|Specify|ST(art)?|TO|GET|SAVE)\b</string>
			<key>name</key>
			<string>keyword.control.mx</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>flag 2-char abbreviations as bad practice</string>
			<key>match</key>
			<string>\b(?i)(BO|CA|CM|CO|CO|CT|DA|DE|DR|EL|FI|EQ|FR|IF|IN|LA|MA|MA|ME|MI|NG|OP|OR|RE|SE|SP|ST|TO)[a-zA-Z_]{1,1}\b</string>
			<key>name</key>
			<string>invalid.illegal.incomplete.keyword.mx</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i)(Computed|Full|Lower|Sym(metric|.*)|Low|Iden(tity|.*)|Unit|Symm|IZ|UN|ID|FU|SY|SD|LO|DI|ZI|Zero|ZIden|IZero)\b</string>
			<key>name</key>
			<string>storage.control.mx</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.mx</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.untitled</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.operator.mx</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.operator.mx</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.operator.mx</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>string.VARIABLE_NAMES.mx</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>variable.operator.mx</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>\STND(A);</string>
			<key>match</key>
			<string>(?i)(\\)(STND|abs|allint|aorder|chol|cos|cosh|cov|cprod|cumnor|d2v|det|dorder|eval|evec|exp|incrow|ival|ivec|ln|m2v|max|mean|min|mnor|momnor|part|pchi|pdfnor|prod|rprod|sin|sinh|sortc|sortr|sqrt|stnd|sum|tan|tanh|tr|v2d|vec|vech)(\()([A-Z])(\))</string>
			<key>name</key>
			<string>meta.variable.operator.mx</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(\=\=|\/\=|\&gt;\=|\&gt;|\&lt;|\&lt;\=|\%|\=\&gt;|\=|\*|\+|\&amp;|\^|\@|\~|\'|\_|\||\:\:|Row|Col(umn))</string>
			<key>name</key>
			<string>variable.operator.mx</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]*)|([0-9\.]*_[ri][0-9]+)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\b</string>
			<key>name</key>
			<string>constant.numeric.fortran</string>
		</dict>
		<dict>
			<key>match</key>
			<string>([a-zA-Z][_a-zA-Z0-9\.]*)</string>
			<key>name</key>
			<string>string.VARIABLE_NAMES.mx</string>
		</dict>
		<dict>
			<key>match</key>
			<string>([0-9]+)</string>
			<key>name</key>
			<string>variable.number.mplus</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.mx</string>
	<key>uuid</key>
	<string>754E7AB4-1DA0-4D9A-91D8-CA787E8249C8</string>
</dict>
</plist>
